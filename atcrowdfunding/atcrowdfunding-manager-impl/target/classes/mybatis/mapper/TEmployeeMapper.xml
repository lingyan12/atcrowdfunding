<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.atcrowdfunding.mapper.TEmployeeMapper">
  <resultMap id="BaseResultMap" type="com.atguigu.atcrowdfunding.bean.TEmployee">
    <id column="eid" jdbcType="INTEGER" property="eid" />
    <result column="ename" jdbcType="VARCHAR" property="ename" />
    <result column="tel" jdbcType="CHAR" property="tel" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="salary" jdbcType="DOUBLE" property="salary" />
    <result column="commission_pct" jdbcType="DOUBLE" property="commissionPct" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="hiredate" jdbcType="DATE" property="hiredate" />
    <result column="job_id" jdbcType="INTEGER" property="jobId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mid" jdbcType="INTEGER" property="mid" />
    <result column="addresss" jdbcType="VARCHAR" property="addresss" />
    <result column="natice_place" jdbcType="VARCHAR" property="naticePlace" />
    <result column="did" jdbcType="INTEGER" property="did" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    eid, ename, tel, gender, salary, commission_pct, birthday, hiredate, job_id, email, 
    mid, addresss, natice_place, did
  </sql>
  <select id="selectByExample" parameterType="com.atguigu.atcrowdfunding.bean.TEmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_employee
    where eid = #{eid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_employee
    where eid = #{eid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.atguigu.atcrowdfunding.bean.TEmployeeExample">
    delete from t_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.atguigu.atcrowdfunding.bean.TEmployee">
    insert into t_employee (eid, ename, tel, 
      gender, salary, commission_pct, 
      birthday, hiredate, job_id, 
      email, mid, addresss, 
      natice_place, did)
    values (#{eid,jdbcType=INTEGER}, #{ename,jdbcType=VARCHAR}, #{tel,jdbcType=CHAR}, 
      #{gender,jdbcType=CHAR}, #{salary,jdbcType=DOUBLE}, #{commissionPct,jdbcType=DOUBLE}, 
      #{birthday,jdbcType=DATE}, #{hiredate,jdbcType=DATE}, #{jobId,jdbcType=INTEGER}, 
      #{email,jdbcType=VARCHAR}, #{mid,jdbcType=INTEGER}, #{addresss,jdbcType=VARCHAR}, 
      #{naticePlace,jdbcType=VARCHAR}, #{did,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.atguigu.atcrowdfunding.bean.TEmployee">
    insert into t_employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        eid,
      </if>
      <if test="ename != null">
        ename,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="commissionPct != null">
        commission_pct,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="hiredate != null">
        hiredate,
      </if>
      <if test="jobId != null">
        job_id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mid != null">
        mid,
      </if>
      <if test="addresss != null">
        addresss,
      </if>
      <if test="naticePlace != null">
        natice_place,
      </if>
      <if test="did != null">
        did,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="ename != null">
        #{ename,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=CHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=DOUBLE},
      </if>
      <if test="commissionPct != null">
        #{commissionPct,jdbcType=DOUBLE},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="hiredate != null">
        #{hiredate,jdbcType=DATE},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mid != null">
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="addresss != null">
        #{addresss,jdbcType=VARCHAR},
      </if>
      <if test="naticePlace != null">
        #{naticePlace,jdbcType=VARCHAR},
      </if>
      <if test="did != null">
        #{did,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.atguigu.atcrowdfunding.bean.TEmployeeExample" resultType="java.lang.Long">
    select count(*) from t_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_employee
    <set>
      <if test="record.eid != null">
        eid = #{record.eid,jdbcType=INTEGER},
      </if>
      <if test="record.ename != null">
        ename = #{record.ename,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=CHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=DOUBLE},
      </if>
      <if test="record.commissionPct != null">
        commission_pct = #{record.commissionPct,jdbcType=DOUBLE},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.hiredate != null">
        hiredate = #{record.hiredate,jdbcType=DATE},
      </if>
      <if test="record.jobId != null">
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mid != null">
        mid = #{record.mid,jdbcType=INTEGER},
      </if>
      <if test="record.addresss != null">
        addresss = #{record.addresss,jdbcType=VARCHAR},
      </if>
      <if test="record.naticePlace != null">
        natice_place = #{record.naticePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.did != null">
        did = #{record.did,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_employee
    set eid = #{record.eid,jdbcType=INTEGER},
      ename = #{record.ename,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=CHAR},
      gender = #{record.gender,jdbcType=CHAR},
      salary = #{record.salary,jdbcType=DOUBLE},
      commission_pct = #{record.commissionPct,jdbcType=DOUBLE},
      birthday = #{record.birthday,jdbcType=DATE},
      hiredate = #{record.hiredate,jdbcType=DATE},
      job_id = #{record.jobId,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      mid = #{record.mid,jdbcType=INTEGER},
      addresss = #{record.addresss,jdbcType=VARCHAR},
      natice_place = #{record.naticePlace,jdbcType=VARCHAR},
      did = #{record.did,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.atguigu.atcrowdfunding.bean.TEmployee">
    update t_employee
    <set>
      <if test="ename != null">
        ename = #{ename,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=CHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=DOUBLE},
      </if>
      <if test="commissionPct != null">
        commission_pct = #{commissionPct,jdbcType=DOUBLE},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="hiredate != null">
        hiredate = #{hiredate,jdbcType=DATE},
      </if>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mid != null">
        mid = #{mid,jdbcType=INTEGER},
      </if>
      <if test="addresss != null">
        addresss = #{addresss,jdbcType=VARCHAR},
      </if>
      <if test="naticePlace != null">
        natice_place = #{naticePlace,jdbcType=VARCHAR},
      </if>
      <if test="did != null">
        did = #{did,jdbcType=INTEGER},
      </if>
    </set>
    where eid = #{eid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.atguigu.atcrowdfunding.bean.TEmployee">
    update t_employee
    set ename = #{ename,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=CHAR},
      gender = #{gender,jdbcType=CHAR},
      salary = #{salary,jdbcType=DOUBLE},
      commission_pct = #{commissionPct,jdbcType=DOUBLE},
      birthday = #{birthday,jdbcType=DATE},
      hiredate = #{hiredate,jdbcType=DATE},
      job_id = #{jobId,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      mid = #{mid,jdbcType=INTEGER},
      addresss = #{addresss,jdbcType=VARCHAR},
      natice_place = #{naticePlace,jdbcType=VARCHAR},
      did = #{did,jdbcType=INTEGER}
    where eid = #{eid,jdbcType=INTEGER}
  </update>
</mapper>